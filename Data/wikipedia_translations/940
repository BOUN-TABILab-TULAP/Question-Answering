Amdahl kanunu
Ayrıca Amdahl argümanı olarak bilinen Amdahl kanunu, sistemin sadece bir parçası artırıldı zaman genel bir sisteme maksimum beklenen iyileşme bulmak için kullanılır. Genellikle birden fazla işlemci kullanarak teorik maksimum hızlanmayı tahmin etmek paralel hesaplama kullanılır. Yasa bilgisayar mimarı Gene Amdahl adını ve 1967 yılında AFIPS Bahar Ortak Bilgisayar Konferansı'nda sunuldu.
Paralel işlem birden çok işlemci kullanan bir programın bir hız, kağıt programının sıralı fraksiyonu için gereken süre ile sınırlıdır. Örneğin, bir program yürütme zamanı geriye kalan 19 saat (% 95) parallelized edilebilir ise o zaman ne olursa olsun, tek bir işlemci çekirdeği ve paralelleştirilmiş olamaz yürütmek için bir saat sürer programın belirli bir kısmını kullanarak 20 saat ihtiyacı Bu programın bir paralelleştirilmiş yürütülmesi için ayrılmış kaç işlemciler, asgari yürütme zamanı kritik bir saat daha az olamaz. Bu nedenle bir hız, kağıt en fazla 20 × sınırlıdır.
Tanımı.
Verilen:
Zaman formula_3 bir algoritma yürütme tekabül arasında formula_4 parçacığı (ler) idam edilirken bitirmek için alır:
formula_5
Bu nedenle, bu formula_6 teorik hızlanma formula_4 konuları yerine getirilmesidir yürütme yeteneğine sahip bir sistem üzerinde verilen bir algoritma yürüterek vardı olabilir:
formula_8
Açıklama.
Parallelized sorun boyutu aynı kalır Amdahl yasası varsayımı altında seri algoritmasına bir algoritma nisbetle Paralelleştirilmiş uygulamalarının beklenen speedup arasındaki ilişki, bir modeldir. Belirli bir problem boyutu için bir algoritma bir parallelized uygulama keyfi hızla algoritmanın operasyonlarının% 12 çalıştırabilirsiniz eğer (operasyonların kalan% 88 paralelleştirilebilir olmadığı halde) Örneğin, Amdahl yasası paralelleştirilmiş versiyonun maksimum hızlanma olduğu kat daha hızlı olmayan paralelleştirilmiş uygulama olarak.
Daha teknik, hukuk iyileştirme "S" bir hıza sahip olduğunu hesaplamanın bir kısmı "P" etkileyen bir hesaplama bir iyileşmeden ulaşılabilir speedup ile ilgilidir. Amdahl yasası olduğunu bildiren (hesaplama% 30 hız yukarı tabi olabilir Örneğin, "P" 0,3 olacak iyileştirme iki kat daha hızlı etkilenen bölümünü yaparsa, "S" 2. olacaktır) olacak bir iyileşme uygulanması genel hızlanma:
Bu formülü türetilmiştir nasıl görmek için, eski hesaplama çalışma süresi biraz zaman birimi için 1 olduğunu varsayalım. artı gelişmiş fraksiyon gereken süre uzunluğu - Yeni hesaplama çalışma süresi ("P" 1) gelişmemiş fraksiyon alır süre olacak. hesaplama geliştirilmiş bölümü için zamanın uzunluğu geliştirilmiş bir parçası "P" / "S" nin süreyi yaparak, speedup bölünmesiyle geliştirilmiş parçanın eski çalışma süresi uzunluğudur. Nihai speedup Yukarıdaki formül ne yeni çalışma süresi, eski çalışma süresi bölünmesiyle hesaplanır.
İşte başka bir örnek. Sırasıyla% 11,% 18,% 23 ve% 48 olarak çalışma zamanı yüzdeleri ile P1, P2, P3 ve P4: Biz dört ardışık bölüme ayrılmıştır sıralı görevi verilir. Sonra P2 5 × hızlandırdı ise, P3 × 20 hızlandırdı olduğunu, S1 = 1 yani P1, hızlandırdı değildir ve P4 1.6 × hızlandırdı olduğunu söylendi. Formülü kullanılarak
P1 / S1 + P2 / S2 + P3 / S3 + P4 / S4, yeni sıralı çalışma süresi bulmak:
Orijinal çalışma süresi az veya biraz daha az. Formülü kullanarak, genel hız artışı 1 / 0,4575 = 2,186, ya da biraz daha fazla çift özgün hızıdır. P1 (% 11) hızlandırdı değildir ve P4 (% 48) sadece 1.6 kat hızlandırdı zaman 20 × ve 5 × speedup genel hızı üzerinde fazla etkisi yoktur dikkat edin.
Parallelleştirme.
(Kalıntılar parallelized edilemez oranını ise - paralelizasyon durumunda, Amdahl yasası "P" (yani, paralelizasyon yarar) paralel yapılabilir bir program oranı ise ve ("P" 1) belirtiyor ) Seri, daha sonra "N" işlemcileri kullanarak elde edilebilecek maksimum hızlanma olduğunu
"N" sonsuza eğilimi limitinde, maksimum hızlanma eğilimi 1 / (1 - "P"). "N" arttıkça Uygulamada, fiyat oranı performans kez (- "P" 1) bile küçük bir bileşeni vardır hızla düşüyor.
"P", sonra% 90, eğer bir örnek olarak, (1 - "P")% 10, ve problem "N" ne kadar büyük bir değer olursa olsun, 10, faktör maksimum tarafından hızlandırılabilir kullanılır. Sözde utanç verici paralel problemleri: Bu nedenle, paralel hesaplama küçük işlemcilerin numaralar, ya da "P" çok yüksek değerlere sahip sorunlara ya sadece yararlıdır. Mümkün olan en küçük değeri - paralel programlama tekne büyük bir kısmı bileşeni ("P" 1) azaltmak için çalışırken oluşur.
"P" işlemci belli bir sayıda ("NP") kullanılarak ölçüldü hızlanmayı ("SU") kullanılarak tahmin edilebilir
Bu şekilde tahmin edilen "P", sonra işlemci farklı sayıda hızlanmayı tahmin etmek Amdahl hukuk kullanılabilir.
Azalan getiriler yasasına İlişkisi.
Amdahl yasasını uygulamak sadece özel bir durumdur 'azalan verim yasası' gösteriyor, oysa Amdahl yasası sık sık, azalan getiriler yasası ile conflated edilir. Biri geliştirmek için ne (elde hız-up açısından) en iyi şekilde alır olursa biri iyileştikçe, sonra bir monoton azalan gelişmeleri göreceksiniz. Ancak, olmayan bir optimal bir alt-optimal bileşeni iyileştirilmesi ve daha iyi bileşen geliştirmek için taşındıktan sonra seçer, tek karşılığında bir artış görebilirsiniz. Bazı iyileştirmeler daha zor ya da diğerlerine göre daha geliştirme zamanı alıcı göz önüne alındığında bu anlamda "non-optimal" bir sırayla bir sistem geliştirmek için sık sık rasyonel olduğunu unutmayın.
Sen kendi kapasitesine mevcut tüm işlemcileri kullanacağı bir sabit boyutlu hesaplama çalıştırıyorsanız, bir makineye daha fazla işlemci ekleyerek olsun getiri ne tür düşünüyorsanız Amdahl yasası azalan verim kanunu temsil ediyor. Eğer sisteme eklediğiniz her yeni işlemci öncekine göre daha az kullanışlı güç katacak. Her zaman formula_13 sınırı doğru toplam verim başkanları olarak, hızlanma oranı azalacak işlemcilerin sayısını iki katına.
Bu analiz, bellek bant genişliği ve I / O bant genişliği gibi diğer potansiyel darboğazları ihmal, onlar işlemci sayısı ile ölçek yoksa; Ancak, hesap gibi darboğazlar dikkate alarak daha sadece ekleyerek işlemciler azalan getiri göstermek eğiliminde olacaktır.
Sıralı program Speedup.
bir kısmı formula_14 kez hızlandırdı edildi geliştirilmiş ardışık programda, maksimum hızlanma eşitsizlik ile sınırlıdır
formula_16 (formula_17) (iyileştirme öncesi) zaman fraksiyonu olduğu geliştirilmiş değil kısmen geçirdi. Örneğin (sağdaki resim):
Bu nedenle, iki kat daha hızlı bir hale beş kat daha hızlı B yapmak daha iyidir. hız yüzde iyileşme gibi hesaplanabilir
